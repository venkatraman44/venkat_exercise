<?php

/**
 * @file
 * File.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\venkat_exercise\Event\UserLoginEvent;

/**
 * Implements hook_theme().
 */
function venkat_exercise_theme($existing, $type, $theme, $path) {
  // Initializing theme, template and the variables.
  return [
    'new_template' => [
      'variables' => [
        'markup' => "",
        'hexcode' => "",
      ],
    ],
  ];

}

/**
 * Implements hook_user_login().
 */
function venkat_exercise_user_login($account) {
  // Instantiate our event.
  $event = new UserLoginEvent($account);
  // Triggering the event_dispatcher service and dispatch the event.
  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch($event, UserLoginEvent::EVENT_NAME);
}

/**
 * Implements hook_page_attachments_alter().
 */
function venkat_exercise_page_attachments_alter(array &$attachments) {
  // Calling the service.
  $route_match = \Drupal::routeMatch();
  // Getting the route name of the particular page.
  $route_name = $route_match->getRouteName();
  // If the route name matches.
  if ($route_name === 'comment.admin') {
    // Apply the css.
    $attachments['#attached']['library'][] = 'venkat_exercise/venkat_exercise_styles';
  }
  // If the route name matches.
  elseif ($route_name === 'entity.node.canonical') {
    // Apply the css.
    $attachments['#attached']['library'][] = 'venkat_exercise/venkat_exercise_styles';
  }
}

/**
 * Implements hook_mail().
 */
function venkat_exercise_mail($key, &$message, $params) {
  $options = [
    'langcode' => $message['langcode'],
  ];

  switch ($key) {
    case 'create_page':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Page created: @title', ['@title' => $params['node_title']], $options);
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_entity_insert().
 */
function venkat_exercise_entity_insert(EntityInterface $entity) {

  if ($entity->getEntityTypeId() !== 'node' || ($entity->getEntityTypeId() === 'node' && $entity->bundle() !== 'page')) {
    return;
  }

  $mailManager = \Drupal::service('plugin.manager.mail');

  $module = 'venkat_exercise';
  $key = 'create_page';
  $to = \Drupal::currentUser()->getEmail();
  $params['message'] = $entity->get('body')->value;
  $params['node_title'] = $entity->label();
  $langcode = \Drupal::currentUser()->getPreferredLangcode();
  $send = TRUE;

  $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
  if ($result['result'] !== TRUE) {

    \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent'), 'error');
    // drupal_set_message.
  }
  else {

    \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent'), 'status');
    // drupal_set_message(t('Your message has been sent.'));.
  }

}
